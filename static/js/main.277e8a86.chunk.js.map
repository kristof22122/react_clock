{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","clock","start","setInterval","date","Date","console","log","toLocaleTimeString","setState","this","clearInterval","props","name","React","Component","App","isClockVisible","hideClock","showClock","setRandomName","newRandomName","Math","ceil","random","prevState","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAKEC,MAAQC,aAAY,WAClB,IAAMC,EAAO,IAAIC,KAGjBC,QAAQC,IAAIH,EAAKI,sBACjB,EAAKC,SAAS,CAAER,MAAOG,EAAKI,yBAC3B,KAXL,uDAaE,WACE,OAAOE,KAAKR,QAdhB,kCAiBE,WACES,cAAcD,KAAKR,SAlBvB,oBAqBE,WACE,IAAQD,EAAUS,KAAKV,MAAfC,MAER,OACE,qCACE,6BAAMS,KAAKE,MAAMC,OACjB,8CAEG,IACAZ,YA9BX,GAA2Ba,IAAMC,WC6ClBC,E,4MA5CbhB,MAAQ,CACNiB,gBAAgB,EAChBJ,KAAM,W,EAGRK,UAAY,WACV,EAAKT,SAAS,CAAEQ,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKV,SAAS,CAAEQ,gBAAgB,K,EAGlCG,cAAgB,WACd,IAAMC,EAAa,gBAAYC,KAAKC,KAAqB,GAAhBD,KAAKE,WAE9C,EAAKf,UAAS,SAACgB,GAIb,OAFAnB,QAAQC,IAAR,qCAA0CkB,EAAUZ,KAApD,eAA+DQ,IAExD,CAAER,KAAMQ,O,4CAInB,WACE,OACE,sBAAKK,UAAU,MAAf,UACE,wBAAQC,KAAK,SAASC,QAASlB,KAAKS,UAApC,wBAIA,wBAAQQ,KAAK,SAASC,QAASlB,KAAKQ,UAApC,wBAIA,wBAAQS,KAAK,SAASC,QAASlB,KAAKU,cAApC,6BAGEV,KAAKV,MAAMiB,gBAAmB,cAAC,EAAD,CAAOJ,KAAMH,KAAKV,MAAMa,c,GAvC9CC,IAAMC,WCPxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.277e8a86.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  clock: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    clock: '',\n  };\n\n  start = setInterval(() => {\n    const date = new Date();\n\n    // eslint-disable-next-line\n    console.log(date.toLocaleTimeString());\n    this.setState({ clock: date.toLocaleTimeString() });\n  }, 1000);\n\n  componentDidMount() {\n    return this.start;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.start);\n  }\n\n  render() {\n    const { clock } = this.state;\n\n    return (\n      <>\n        <h1>{ this.props.name }</h1>\n        <p>\n          Current time:\n          {' '}\n          {clock}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  name: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    name: 'Clock 0',\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  setRandomName = () => {\n    const newRandomName = `Clock ${Math.ceil(Math.random() * 10)}`;\n\n    this.setState((prevState) => {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevState.name} to ${newRandomName}`);\n\n      return { name: newRandomName };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <button type=\"button\" onClick={this.showClock}>\n          Show clock\n        </button>\n\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide clock\n        </button>\n\n        <button type=\"button\" onClick={this.setRandomName}>\n          Set random name\n        </button>\n        {(this.state.isClockVisible) && <Clock name={this.state.name} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}